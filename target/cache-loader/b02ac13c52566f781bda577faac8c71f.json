{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","mtime":1720520697211},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBKaGlFdmVudE1hbmFnZXIsIEpoaUV2ZW50V2l0aENvbnRlbnQgfSBmcm9tICduZy1qaGlwc3Rlcic7CmltcG9ydCB7IHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKbGV0IEVycm9ySGFuZGxlckludGVyY2VwdG9yID0gY2xhc3MgRXJyb3JIYW5kbGVySW50ZXJjZXB0b3IgewogICAgY29uc3RydWN0b3IoZXZlbnRNYW5hZ2VyKSB7CiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIgPSBldmVudE1hbmFnZXI7CiAgICB9CiAgICBpbnRlcmNlcHQocmVxdWVzdCwgbmV4dCkgewogICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXF1ZXN0KS5waXBlKHRhcChudWxsLCAoZXJyKSA9PiB7CiAgICAgICAgICAgIGlmICghKGVyci5zdGF0dXMgPT09IDQwMSAmJiAoZXJyLm1lc3NhZ2UgPT09ICcnIHx8IChlcnIudXJsICYmIGVyci51cmwuaW5jbHVkZXMoJ2FwaS9hY2NvdW50JykpKSkpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyLmJyb2FkY2FzdChuZXcgSmhpRXZlbnRXaXRoQ29udGVudCgnZHNwQXBwLmh0dHBFcnJvcicsIGVycikpOwogICAgICAgICAgICB9CiAgICAgICAgfSkpOwogICAgfQp9OwpFcnJvckhhbmRsZXJJbnRlcmNlcHRvciA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBJbmplY3RhYmxlKCksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSmhpRXZlbnRNYW5hZ2VyICE9PSAidW5kZWZpbmVkIiAmJiBKaGlFdmVudE1hbmFnZXIpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQpdLCBFcnJvckhhbmRsZXJJbnRlcmNlcHRvcik7CmV4cG9ydCB7IEVycm9ySGFuZGxlckludGVyY2VwdG9yIH07Cg=="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAGnE,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAGrC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CAAC,IAAI,EAAE,CAAC,GAAsB,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;gBACjG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,mBAAmB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,CAAC;aAC/E;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF,CAAA;AAZY,uBAAuB;IADnC,UAAU,EAAE;iEAEuB,eAAe,oBAAf,eAAe;GADtC,uBAAuB,CAYnC;SAZY,uBAAuB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiEventManager, JhiEventWithContent } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(private eventManager: JhiEventManager) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(null, (err: HttpErrorResponse) => {\n        if (!(err.status === 401 && (err.message === '' || (err.url && err.url.includes('api/account'))))) {\n          this.eventManager.broadcast(new JhiEventWithContent('dspApp.httpError', err));\n        }\n      })\n    );\n  }\n}\n"]}]}