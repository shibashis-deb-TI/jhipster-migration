{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/layouts/profiles/page-ribbon.component.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/layouts/profiles/page-ribbon.component.ts","mtime":1720520697474},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKaW1wb3J0IHsgUHJvZmlsZVNlcnZpY2UgfSBmcm9tICcuL3Byb2ZpbGUuc2VydmljZSc7CmxldCBQYWdlUmliYm9uQ29tcG9uZW50ID0gY2xhc3MgUGFnZVJpYmJvbkNvbXBvbmVudCB7CiAgICBjb25zdHJ1Y3Rvcihwcm9maWxlU2VydmljZSkgewogICAgICAgIHRoaXMucHJvZmlsZVNlcnZpY2UgPSBwcm9maWxlU2VydmljZTsKICAgIH0KICAgIG5nT25Jbml0KCkgewogICAgICAgIHRoaXMucmliYm9uRW52JCA9IHRoaXMucHJvZmlsZVNlcnZpY2UuZ2V0UHJvZmlsZUluZm8oKS5waXBlKG1hcChwcm9maWxlSW5mbyA9PiBwcm9maWxlSW5mby5yaWJib25FbnYpKTsKICAgIH0KfTsKUGFnZVJpYmJvbkNvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBDb21wb25lbnQoewogICAgICAgIHNlbGVjdG9yOiAnamhpLXBhZ2UtcmliYm9uJywKICAgICAgICB0ZW1wbGF0ZTogYAogICAgPGRpdiBjbGFzcz0icmliYm9uIiAqbmdJZj0icmliYm9uRW52JCB8IGFzeW5jIGFzIHJpYmJvbkVudiI+CiAgICAgIDxhIGhyZWY9IiIgamhpVHJhbnNsYXRlPSJnbG9iYWwucmliYm9uLnt7IHJpYmJvbkVudiB9fSI+e3sgcmliYm9uRW52IH19PC9hPgogICAgPC9kaXY+CiAgYCwKICAgICAgICBzdHlsZVVybHM6IFsncGFnZS1yaWJib24uc2NzcyddCiAgICB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBQcm9maWxlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgUHJvZmlsZVNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQpdLCBQYWdlUmliYm9uQ29tcG9uZW50KTsKZXhwb3J0IHsgUGFnZVJpYmJvbkNvbXBvbmVudCB9Owo="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/layouts/profiles/page-ribbon.component.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/layouts/profiles/page-ribbon.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAWnD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;IACzG,CAAC;CACF,CAAA;AARY,mBAAmB;IAT/B,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE;;;;GAIT;QACD,SAAS,EAAE,CAAC,kBAAkB,CAAC;KAChC,CAAC;iEAIoC,cAAc,oBAAd,cAAc;GAHvC,mBAAmB,CAQ/B;SARY,mBAAmB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProfileService } from './profile.service';\n\n@Component({\n  selector: 'jhi-page-ribbon',\n  template: `\n    <div class=\"ribbon\" *ngIf=\"ribbonEnv$ | async as ribbonEnv\">\n      <a href=\"\" jhiTranslate=\"global.ribbon.{{ ribbonEnv }}\">{{ ribbonEnv }}</a>\n    </div>\n  `,\n  styleUrls: ['page-ribbon.scss']\n})\nexport class PageRibbonComponent implements OnInit {\n  ribbonEnv$?: Observable<string | undefined>;\n\n  constructor(private profileService: ProfileService) {}\n\n  ngOnInit(): void {\n    this.ribbonEnv$ = this.profileService.getProfileInfo().pipe(map(profileInfo => profileInfo.ribbonEnv));\n  }\n}\n"]}]}