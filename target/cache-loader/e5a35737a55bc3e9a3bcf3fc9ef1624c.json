{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","mtime":1720520697345},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2I7CmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgTG9jYWxTdG9yYWdlU2VydmljZSwgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSAnbmd4LXdlYnN0b3JhZ2UnOwppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsKbGV0IEF1dGhJbnRlcmNlcHRvciA9IGNsYXNzIEF1dGhJbnRlcmNlcHRvciB7CiAgICBjb25zdHJ1Y3Rvcihsb2NhbFN0b3JhZ2UsIHNlc3Npb25TdG9yYWdlKSB7CiAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSBsb2NhbFN0b3JhZ2U7CiAgICAgICAgdGhpcy5zZXNzaW9uU3RvcmFnZSA9IHNlc3Npb25TdG9yYWdlOwogICAgfQogICAgaW50ZXJjZXB0KHJlcXVlc3QsIG5leHQpIHsKICAgICAgICBpZiAoIXJlcXVlc3QgfHwgIXJlcXVlc3QudXJsIHx8IChyZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdodHRwJykgJiYgIShTRVJWRVJfQVBJX1VSTCAmJiByZXF1ZXN0LnVybC5zdGFydHNXaXRoKFNFUlZFUl9BUElfVVJMKSkpKSB7CiAgICAgICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXF1ZXN0KTsKICAgICAgICB9CiAgICAgICAgY29uc3QgdG9rZW4gPSB0aGlzLmxvY2FsU3RvcmFnZS5yZXRyaWV2ZSgnYXV0aGVudGljYXRpb25Ub2tlbicpIHx8IHRoaXMuc2Vzc2lvblN0b3JhZ2UucmV0cmlldmUoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nKTsKICAgICAgICBpZiAodG9rZW4pIHsKICAgICAgICAgICAgcmVxdWVzdCA9IHJlcXVlc3QuY2xvbmUoewogICAgICAgICAgICAgICAgc2V0SGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHRva2VuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxdWVzdCk7CiAgICB9Cn07CkF1dGhJbnRlcmNlcHRvciA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBJbmplY3RhYmxlKCksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgTG9jYWxTdG9yYWdlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgTG9jYWxTdG9yYWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFNlc3Npb25TdG9yYWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdF0pCl0sIEF1dGhJbnRlcmNlcHRvcik7CmV4cG9ydCB7IEF1dGhJbnRlcmNlcHRvciB9Owo="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AAG5E,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGnD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,YAAiC,EAAU,cAAqC;QAAhF,iBAAY,GAAZ,YAAY,CAAqB;QAAU,mBAAc,GAAd,cAAc,CAAuB;IAAG,CAAC;IAExG,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;YAC/H,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QACvH,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,SAAS,GAAG,KAAK;iBACjC;aACF,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;CACF,CAAA;AAlBY,eAAe;IAD3B,UAAU,EAAE;iEAEuB,mBAAmB,oBAAnB,mBAAmB,oDAA0B,qBAAqB,oBAArB,qBAAqB;GADzF,eAAe,CAkB3B;SAlBY,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private localStorage: LocalStorageService, private sessionStorage: SessionStorageService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!request || !request.url || (request.url.startsWith('http') && !(SERVER_API_URL && request.url.startsWith(SERVER_API_URL)))) {\n      return next.handle(request);\n    }\n\n    const token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + token\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n"]}]}