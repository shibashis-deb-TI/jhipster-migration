{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/alert/alert-error.component.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/alert/alert-error.component.ts","mtime":1720520698702},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnOwppbXBvcnQgeyBKaGlFdmVudE1hbmFnZXIsIEpoaUFsZXJ0U2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJzsKbGV0IEFsZXJ0RXJyb3JDb21wb25lbnQgPSBjbGFzcyBBbGVydEVycm9yQ29tcG9uZW50IHsKICAgIGNvbnN0cnVjdG9yKGFsZXJ0U2VydmljZSwgZXZlbnRNYW5hZ2VyLCB0cmFuc2xhdGVTZXJ2aWNlKSB7CiAgICAgICAgdGhpcy5hbGVydFNlcnZpY2UgPSBhbGVydFNlcnZpY2U7CiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIgPSBldmVudE1hbmFnZXI7CiAgICAgICAgdGhpcy5hbGVydHMgPSBbXTsKICAgICAgICB0aGlzLmVycm9yTGlzdGVuZXIgPSBldmVudE1hbmFnZXIuc3Vic2NyaWJlKCdkc3BBcHAuZXJyb3InLCAocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgY29uc3QgZXJyb3JSZXNwb25zZSA9IHJlc3BvbnNlLmNvbnRlbnQ7CiAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydChlcnJvclJlc3BvbnNlLm1lc3NhZ2UsIGVycm9yUmVzcG9uc2Uua2V5LCBlcnJvclJlc3BvbnNlLnBhcmFtcyk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5odHRwRXJyb3JMaXN0ZW5lciA9IGV2ZW50TWFuYWdlci5zdWJzY3JpYmUoJ2RzcEFwcC5odHRwRXJyb3InLCAocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgY29uc3QgaHR0cEVycm9yUmVzcG9uc2UgPSByZXNwb25zZS5jb250ZW50OwogICAgICAgICAgICBzd2l0Y2ggKGh0dHBFcnJvclJlc3BvbnNlLnN0YXR1cykgewogICAgICAgICAgICAgICAgLy8gY29ubmVjdGlvbiByZWZ1c2VkLCBzZXJ2ZXIgbm90IHJlYWNoYWJsZQogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydCgnU2VydmVyIG5vdCByZWFjaGFibGUnLCAnZXJyb3Iuc2VydmVyLm5vdC5yZWFjaGFibGUnKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgNDAwOiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJyID0gaHR0cEVycm9yUmVzcG9uc2UuaGVhZGVycy5rZXlzKCk7CiAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9ySGVhZGVyID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICBsZXQgZW50aXR5S2V5ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICBhcnIuZm9yRWFjaChlbnRyeSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbnRyeS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCdhcHAtZXJyb3InKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JIZWFkZXIgPSBodHRwRXJyb3JSZXNwb25zZS5oZWFkZXJzLmdldChlbnRyeSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZW50cnkudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLXBhcmFtcycpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlLZXkgPSBodHRwRXJyb3JSZXNwb25zZS5oZWFkZXJzLmdldChlbnRyeSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JIZWFkZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50aXR5TmFtZSA9IHRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudCgnZ2xvYmFsLm1lbnUuZW50aXRpZXMuJyArIGVudGl0eUtleSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydChlcnJvckhlYWRlciwgZXJyb3JIZWFkZXIsIHsgZW50aXR5TmFtZSB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IgIT09ICcnICYmIGh0dHBFcnJvclJlc3BvbnNlLmVycm9yLmZpZWxkRXJyb3JzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkRXJyb3JzID0gaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IuZmllbGRFcnJvcnM7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGRFcnJvciBvZiBmaWVsZEVycm9ycykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFsnTWluJywgJ01heCcsICdEZWNpbWFsTWluJywgJ0RlY2ltYWxNYXgnXS5pbmNsdWRlcyhmaWVsZEVycm9yLm1lc3NhZ2UpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRFcnJvci5tZXNzYWdlID0gJ1NpemUnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29udmVydCAnc29tZXRoaW5nWzE0XS5vdGhlcls0XS5pZCcgdG8gJ3NvbWV0aGluZ1tdLm90aGVyW10uaWQnIHNvIHRyYW5zbGF0aW9ucyBjYW4gYmUgd3JpdHRlbiB0byBpdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udmVydGVkRmllbGQgPSBmaWVsZEVycm9yLmZpZWxkLnJlcGxhY2UoL1xbXGQqXF0vZywgJ1tdJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSB0cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoJ2RzcEFwcC4nICsgZmllbGRFcnJvci5vYmplY3ROYW1lICsgJy4nICsgY29udmVydGVkRmllbGQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KCdFcnJvciBvbiBmaWVsZCAiJyArIGZpZWxkTmFtZSArICciJywgJ2Vycm9yLicgKyBmaWVsZEVycm9yLm1lc3NhZ2UsIHsgZmllbGROYW1lIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGh0dHBFcnJvclJlc3BvbnNlLmVycm9yICE9PSAnJyAmJiBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydChodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlLCBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlLCBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5wYXJhbXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KGh0dHBFcnJvclJlc3BvbnNlLmVycm9yKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjYXNlIDQwNDoKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoJ05vdCBmb3VuZCcsICdlcnJvci51cmwubm90LmZvdW5kJyk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgICAgIGlmIChodHRwRXJyb3JSZXNwb25zZS5lcnJvciAhPT0gJycgJiYgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgc2V0Q2xhc3NlcyhhbGVydCkgewogICAgICAgIGNvbnN0IGNsYXNzZXMgPSB7ICdqaGktdG9hc3QnOiBCb29sZWFuKGFsZXJ0LnRvYXN0KSB9OwogICAgICAgIGlmIChhbGVydC5wb3NpdGlvbikgewogICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgY2xhc3NlcywgeyBbYWxlcnQucG9zaXRpb25dOiB0cnVlIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gY2xhc3NlczsKICAgIH0KICAgIG5nT25EZXN0cm95KCkgewogICAgICAgIGlmICh0aGlzLmVycm9yTGlzdGVuZXIpIHsKICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIuZGVzdHJveSh0aGlzLmVycm9yTGlzdGVuZXIpOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5odHRwRXJyb3JMaXN0ZW5lcikgewogICAgICAgICAgICB0aGlzLmV2ZW50TWFuYWdlci5kZXN0cm95KHRoaXMuaHR0cEVycm9yTGlzdGVuZXIpOwogICAgICAgIH0KICAgIH0KICAgIGFkZEVycm9yQWxlcnQobWVzc2FnZSwga2V5LCBkYXRhKSB7CiAgICAgICAgbWVzc2FnZSA9IGtleSAmJiBrZXkgIT09IG51bGwgPyBrZXkgOiBtZXNzYWdlOwogICAgICAgIGNvbnN0IG5ld0FsZXJ0ID0gewogICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJywKICAgICAgICAgICAgbXNnOiBtZXNzYWdlLAogICAgICAgICAgICBwYXJhbXM6IGRhdGEsCiAgICAgICAgICAgIHRpbWVvdXQ6IDUwMDAsCiAgICAgICAgICAgIHRvYXN0OiB0aGlzLmFsZXJ0U2VydmljZS5pc1RvYXN0KCksCiAgICAgICAgICAgIHNjb3BlZDogdHJ1ZQogICAgICAgIH07CiAgICAgICAgdGhpcy5hbGVydHMucHVzaCh0aGlzLmFsZXJ0U2VydmljZS5hZGRBbGVydChuZXdBbGVydCwgdGhpcy5hbGVydHMpKTsKICAgIH0KfTsKQWxlcnRFcnJvckNvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBDb21wb25lbnQoewogICAgICAgIHNlbGVjdG9yOiAnamhpLWFsZXJ0LWVycm9yJywKICAgICAgICB0ZW1wbGF0ZTogYAogICAgPGRpdiBjbGFzcz0iYWxlcnRzIiByb2xlPSJhbGVydCI+CiAgICAgIDxkaXYgKm5nRm9yPSJsZXQgYWxlcnQgb2YgYWxlcnRzIiBbbmdDbGFzc109InNldENsYXNzZXMoYWxlcnQpIj4KICAgICAgICA8bmdiLWFsZXJ0ICpuZ0lmPSJhbGVydCAmJiBhbGVydC50eXBlICYmIGFsZXJ0Lm1zZyIgW3R5cGVdPSJhbGVydC50eXBlIiAoY2xvc2UpPSJhbGVydC5jbG9zZShhbGVydHMpIj4KICAgICAgICAgIDxwcmUgW2lubmVySFRNTF09ImFsZXJ0Lm1zZyI+PC9wcmU+CiAgICAgICAgPC9uZ2ItYWxlcnQ+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgYAogICAgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSmhpQWxlcnRTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBKaGlBbGVydFNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgSmhpRXZlbnRNYW5hZ2VyICE9PSAidW5kZWZpbmVkIiAmJiBKaGlFdmVudE1hbmFnZXIpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3QsIHR5cGVvZiAoX2MgPSB0eXBlb2YgVHJhbnNsYXRlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgVHJhbnNsYXRlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdF0pCl0sIEFsZXJ0RXJyb3JDb21wb25lbnQpOwpleHBvcnQgeyBBbGVydEVycm9yQ29tcG9uZW50IH07Cg=="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/alert/alert-error.component.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/alert/alert-error.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlert, JhiAlertService, JhiEventWithContent } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\nimport { AlertError } from './alert-error.model';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: `\n    <div class=\"alerts\" role=\"alert\">\n      <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n        <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n          <pre [innerHTML]=\"alert.msg\"></pre>\n        </ngb-alert>\n      </div>\n    </div>\n  `\n})\nexport class AlertErrorComponent implements OnDestroy {\n  alerts: JhiAlert[] = [];\n  errorListener: Subscription;\n  httpErrorListener: Subscription;\n\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, translateService: TranslateService) {\n    this.errorListener = eventManager.subscribe('dspApp.error', (response: JhiEventWithContent<AlertError>) => {\n      const errorResponse = response.content;\n      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);\n    });\n\n    this.httpErrorListener = eventManager.subscribe('dspApp.httpError', (response: JhiEventWithContent<HttpErrorResponse>) => {\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = translateService.instant('global.menu.entities.' + entityKey);\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (const fieldError of fieldErrors) {\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = translateService.instant('dspApp.' + fieldError.objectName + '.' + convertedField);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n        }\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert: JhiAlert): { [key: string]: boolean } {\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\n    if (alert.position) {\n      return { ...classes, [alert.position]: true };\n    }\n    return classes;\n  }\n\n  ngOnDestroy(): void {\n    if (this.errorListener) {\n      this.eventManager.destroy(this.errorListener);\n    }\n    if (this.httpErrorListener) {\n      this.eventManager.destroy(this.httpErrorListener);\n    }\n  }\n\n  addErrorAlert(message: string, key?: string, data?: any): void {\n    message = key && key !== null ? key : message;\n\n    const newAlert: JhiAlert = {\n      type: 'danger',\n      msg: message,\n      params: data,\n      timeout: 5000,\n      toast: this.alertService.isToast(),\n      scoped: true\n    };\n\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\n  }\n}\n"]}]}