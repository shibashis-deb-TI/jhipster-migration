{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/health/health.component.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/health/health.component.ts","mtime":1720520698130},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2I7CmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBOZ2JNb2RhbCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJzsKaW1wb3J0IHsgSGVhbHRoU2VydmljZSB9IGZyb20gJy4vaGVhbHRoLnNlcnZpY2UnOwppbXBvcnQgeyBIZWFsdGhNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vaGVhbHRoLW1vZGFsLmNvbXBvbmVudCc7CmxldCBIZWFsdGhDb21wb25lbnQgPSBjbGFzcyBIZWFsdGhDb21wb25lbnQgewogICAgY29uc3RydWN0b3IobW9kYWxTZXJ2aWNlLCBoZWFsdGhTZXJ2aWNlKSB7CiAgICAgICAgdGhpcy5tb2RhbFNlcnZpY2UgPSBtb2RhbFNlcnZpY2U7CiAgICAgICAgdGhpcy5oZWFsdGhTZXJ2aWNlID0gaGVhbHRoU2VydmljZTsKICAgIH0KICAgIG5nT25Jbml0KCkgewogICAgICAgIHRoaXMucmVmcmVzaCgpOwogICAgfQogICAgZ2V0QmFkZ2VDbGFzcyhzdGF0dXNTdGF0ZSkgewogICAgICAgIGlmIChzdGF0dXNTdGF0ZSA9PT0gJ1VQJykgewogICAgICAgICAgICByZXR1cm4gJ2JhZGdlLXN1Y2Nlc3MnOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuICdiYWRnZS1kYW5nZXInOwogICAgICAgIH0KICAgIH0KICAgIHJlZnJlc2goKSB7CiAgICAgICAgdGhpcy5oZWFsdGhTZXJ2aWNlLmNoZWNrSGVhbHRoKCkuc3Vic2NyaWJlKGhlYWx0aCA9PiAodGhpcy5oZWFsdGggPSBoZWFsdGgpLCAoZXJyb3IpID0+IHsKICAgICAgICAgICAgaWYgKGVycm9yLnN0YXR1cyA9PT0gNTAzKSB7CiAgICAgICAgICAgICAgICB0aGlzLmhlYWx0aCA9IGVycm9yLmVycm9yOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9CiAgICBzaG93SGVhbHRoKGhlYWx0aCkgewogICAgICAgIGNvbnN0IG1vZGFsUmVmID0gdGhpcy5tb2RhbFNlcnZpY2Uub3BlbihIZWFsdGhNb2RhbENvbXBvbmVudCk7CiAgICAgICAgbW9kYWxSZWYuY29tcG9uZW50SW5zdGFuY2UuaGVhbHRoID0gaGVhbHRoOwogICAgfQp9OwpIZWFsdGhDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgQ29tcG9uZW50KHsKICAgICAgICBzZWxlY3RvcjogJ2poaS1oZWFsdGgnLAogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9oZWFsdGguY29tcG9uZW50Lmh0bWwnCiAgICB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBOZ2JNb2RhbCAhPT0gInVuZGVmaW5lZCIgJiYgTmdiTW9kYWwpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgSGVhbHRoU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgSGVhbHRoU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdF0pCl0sIEhlYWx0aENvbXBvbmVudCk7CmV4cG9ydCB7IEhlYWx0aENvbXBvbmVudCB9Owo="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/health/health.component.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/health/health.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,aAAa,EAAkD,MAAM,kBAAkB,CAAC;AACjG,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAMhE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAG1B,YAAoB,YAAsB,EAAU,aAA4B;QAA5D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,WAAyB;QACrC,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAChC,CAAC,KAAwB,EAAE,EAAE;YAC3B,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;aAC3B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAgD;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC9D,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7C,CAAC;CACF,CAAA;AAhCY,eAAe;IAJ3B,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,WAAW,EAAE,yBAAyB;KACvC,CAAC;iEAIkC,QAAQ,oBAAR,QAAQ,oDAAyB,aAAa,oBAAb,aAAa;GAHrE,eAAe,CAgC3B;SAhCY,eAAe","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthService, HealthStatus, Health, HealthKey, HealthDetails } from './health.service';\nimport { HealthModalComponent } from './health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html'\n})\nexport class HealthComponent implements OnInit {\n  health?: Health;\n\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  getBadgeClass(statusState: HealthStatus): string {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n\n  refresh(): void {\n    this.healthService.checkHealth().subscribe(\n      health => (this.health = health),\n      (error: HttpErrorResponse) => {\n        if (error.status === 503) {\n          this.health = error.error;\n        }\n      }\n    );\n  }\n\n  showHealth(health: { key: HealthKey; value: HealthDetails }): void {\n    const modalRef = this.modalService.open(HealthModalComponent);\n    modalRef.componentInstance.health = health;\n  }\n}\n"]}]}