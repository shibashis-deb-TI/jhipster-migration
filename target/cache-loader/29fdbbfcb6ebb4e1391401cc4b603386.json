{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/account.service.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/account.service.ts","mtime":1720520698808},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jLCBfZCwgX2U7CmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJzsKaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJzsKaW1wb3J0IHsgSmhpTGFuZ3VhZ2VTZXJ2aWNlIH0gZnJvbSAnbmctamhpcHN0ZXInOwppbXBvcnQgeyBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgfSBmcm9tICduZ3gtd2Vic3RvcmFnZSc7CmltcG9ydCB7IFJlcGxheVN1YmplY3QsIG9mIH0gZnJvbSAncnhqcyc7CmltcG9ydCB7IHNoYXJlUmVwbGF5LCB0YXAsIGNhdGNoRXJyb3IgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCB7IFN0YXRlU3RvcmFnZVNlcnZpY2UgfSBmcm9tICdhcHAvY29yZS9hdXRoL3N0YXRlLXN0b3JhZ2Uuc2VydmljZSc7CmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOwpsZXQgQWNjb3VudFNlcnZpY2UgPSBjbGFzcyBBY2NvdW50U2VydmljZSB7CiAgICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2UsIHNlc3Npb25TdG9yYWdlLCBodHRwLCBzdGF0ZVN0b3JhZ2VTZXJ2aWNlLCByb3V0ZXIpIHsKICAgICAgICB0aGlzLmxhbmd1YWdlU2VydmljZSA9IGxhbmd1YWdlU2VydmljZTsKICAgICAgICB0aGlzLnNlc3Npb25TdG9yYWdlID0gc2Vzc2lvblN0b3JhZ2U7CiAgICAgICAgdGhpcy5odHRwID0gaHR0cDsKICAgICAgICB0aGlzLnN0YXRlU3RvcmFnZVNlcnZpY2UgPSBzdGF0ZVN0b3JhZ2VTZXJ2aWNlOwogICAgICAgIHRoaXMucm91dGVyID0gcm91dGVyOwogICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gbnVsbDsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUgPSBuZXcgUmVwbGF5U3ViamVjdCgxKTsKICAgIH0KICAgIHNhdmUoYWNjb3VudCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdChTRVJWRVJfQVBJX1VSTCArICdhcGkvYWNjb3VudCcsIGFjY291bnQpOwogICAgfQogICAgYXV0aGVudGljYXRlKGlkZW50aXR5KSB7CiAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBpZGVudGl0eTsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7CiAgICB9CiAgICBoYXNBbnlBdXRob3JpdHkoYXV0aG9yaXRpZXMpIHsKICAgICAgICBpZiAoIXRoaXMudXNlcklkZW50aXR5IHx8ICF0aGlzLnVzZXJJZGVudGl0eS5hdXRob3JpdGllcykgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmICghQXJyYXkuaXNBcnJheShhdXRob3JpdGllcykpIHsKICAgICAgICAgICAgYXV0aG9yaXRpZXMgPSBbYXV0aG9yaXRpZXNdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy51c2VySWRlbnRpdHkuYXV0aG9yaXRpZXMuc29tZSgoYXV0aG9yaXR5KSA9PiBhdXRob3JpdGllcy5pbmNsdWRlcyhhdXRob3JpdHkpKTsKICAgIH0KICAgIGlkZW50aXR5KGZvcmNlKSB7CiAgICAgICAgaWYgKCF0aGlzLmFjY291bnRDYWNoZSQgfHwgZm9yY2UgfHwgIXRoaXMuaXNBdXRoZW50aWNhdGVkKCkpIHsKICAgICAgICAgICAgdGhpcy5hY2NvdW50Q2FjaGUkID0gdGhpcy5mZXRjaCgpLnBpcGUoY2F0Y2hFcnJvcigoKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gb2YobnVsbCk7CiAgICAgICAgICAgIH0pLCB0YXAoKGFjY291bnQpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlKGFjY291bnQpOwogICAgICAgICAgICAgICAgLy8gQWZ0ZXIgcmV0cmlldmUgdGhlIGFjY291bnQgaW5mbywgdGhlIGxhbmd1YWdlIHdpbGwgYmUgY2hhbmdlZCB0bwogICAgICAgICAgICAgICAgLy8gdGhlIHVzZXIncyBwcmVmZXJyZWQgbGFuZ3VhZ2UgY29uZmlndXJlZCBpbiB0aGUgYWNjb3VudCBzZXR0aW5nCiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudCAmJiBhY2NvdW50LmxhbmdLZXkpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBsYW5nS2V5ID0gdGhpcy5zZXNzaW9uU3RvcmFnZS5yZXRyaWV2ZSgnbG9jYWxlJykgfHwgYWNjb3VudC5sYW5nS2V5OwogICAgICAgICAgICAgICAgICAgIHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLmNoYW5nZUxhbmd1YWdlKGxhbmdLZXkpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKGFjY291bnQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdmlnYXRlVG9TdG9yZWRVcmwoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSksIHNoYXJlUmVwbGF5KCkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5hY2NvdW50Q2FjaGUkOwogICAgfQogICAgaXNBdXRoZW50aWNhdGVkKCkgewogICAgICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eSAhPT0gbnVsbDsKICAgIH0KICAgIGdldEF1dGhlbnRpY2F0aW9uU3RhdGUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5hc09ic2VydmFibGUoKTsKICAgIH0KICAgIGdldEltYWdlVXJsKCkgewogICAgICAgIHJldHVybiB0aGlzLnVzZXJJZGVudGl0eSA/IHRoaXMudXNlcklkZW50aXR5LmltYWdlVXJsIDogJyc7CiAgICB9CiAgICBmZXRjaCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldChTRVJWRVJfQVBJX1VSTCArICdhcGkvYWNjb3VudCcpOwogICAgfQogICAgbmF2aWdhdGVUb1N0b3JlZFVybCgpIHsKICAgICAgICAvLyBwcmV2aW91c1N0YXRlIGNhbiBiZSBzZXQgaW4gdGhlIGF1dGhFeHBpcmVkSW50ZXJjZXB0b3IgYW5kIGluIHRoZSB1c2VyUm91dGVBY2Nlc3NTZXJ2aWNlCiAgICAgICAgLy8gaWYgbG9naW4gaXMgc3VjY2Vzc2Z1bCwgZ28gdG8gc3RvcmVkIHByZXZpb3VzU3RhdGUgYW5kIGNsZWFyIHByZXZpb3VzU3RhdGUKICAgICAgICBjb25zdCBwcmV2aW91c1VybCA9IHRoaXMuc3RhdGVTdG9yYWdlU2VydmljZS5nZXRVcmwoKTsKICAgICAgICBpZiAocHJldmlvdXNVcmwpIHsKICAgICAgICAgICAgdGhpcy5zdGF0ZVN0b3JhZ2VTZXJ2aWNlLmNsZWFyVXJsKCk7CiAgICAgICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwocHJldmlvdXNVcmwpOwogICAgICAgIH0KICAgIH0KfTsKQWNjb3VudFNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBKaGlMYW5ndWFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaUxhbmd1YWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFNlc3Npb25TdG9yYWdlU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBIdHRwQ2xpZW50ICE9PSAidW5kZWZpbmVkIiAmJiBIdHRwQ2xpZW50KSA9PT0gImZ1bmN0aW9uIiA/IF9jIDogT2JqZWN0LCB0eXBlb2YgKF9kID0gdHlwZW9mIFN0YXRlU3RvcmFnZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFN0YXRlU3RvcmFnZVNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2QgOiBPYmplY3QsIHR5cGVvZiAoX2UgPSB0eXBlb2YgUm91dGVyICE9PSAidW5kZWZpbmVkIiAmJiBSb3V0ZXIpID09PSAiZnVuY3Rpb24iID8gX2UgOiBPYmplY3RdKQpdLCBBY2NvdW50U2VydmljZSk7CmV4cG9ydCB7IEFjY291bnRTZXJ2aWNlIH07Cg=="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/account.service.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { Observable, ReplaySubject, of } from 'rxjs';\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: Account | null = null;\n  private authenticationState = new ReplaySubject<Account | null>(1);\n  private accountCache$?: Observable<Account | null>;\n\n  constructor(\n    private languageService: JhiLanguageService,\n    private sessionStorage: SessionStorageService,\n    private http: HttpClient,\n    private stateStorageService: StateStorageService,\n    private router: Router\n  ) {}\n\n  save(account: Account): Observable<{}> {\n    return this.http.post(SERVER_API_URL + 'api/account', account);\n  }\n\n  authenticate(identity: Account | null): void {\n    this.userIdentity = identity;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[] | string): boolean {\n    if (!this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n    if (!Array.isArray(authorities)) {\n      authorities = [authorities];\n    }\n    return this.userIdentity.authorities.some((authority: string) => authorities.includes(authority));\n  }\n\n  identity(force?: boolean): Observable<Account | null> {\n    if (!this.accountCache$ || force || !this.isAuthenticated()) {\n      this.accountCache$ = this.fetch().pipe(\n        catchError(() => {\n          return of(null);\n        }),\n        tap((account: Account | null) => {\n          this.authenticate(account);\n\n          // After retrieve the account info, the language will be changed to\n          // the user's preferred language configured in the account setting\n          if (account && account.langKey) {\n            const langKey = this.sessionStorage.retrieve('locale') || account.langKey;\n            this.languageService.changeLanguage(langKey);\n          }\n\n          if (account) {\n            this.navigateToStoredUrl();\n          }\n        }),\n        shareReplay()\n      );\n    }\n    return this.accountCache$;\n  }\n\n  isAuthenticated(): boolean {\n    return this.userIdentity !== null;\n  }\n\n  getAuthenticationState(): Observable<Account | null> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.userIdentity ? this.userIdentity.imageUrl : '';\n  }\n\n  private fetch(): Observable<Account> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account');\n  }\n\n  private navigateToStoredUrl(): void {\n    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService\n    // if login is successful, go to stored previousState and clear previousState\n    const previousUrl = this.stateStorageService.getUrl();\n    if (previousUrl) {\n      this.stateStorageService.clearUrl();\n      this.router.navigateByUrl(previousUrl);\n    }\n  }\n}\n"]}]}