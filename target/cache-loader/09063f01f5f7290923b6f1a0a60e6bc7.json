{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/metrics/metrics.component.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/metrics/metrics.component.ts","mtime":1720520698252},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2I7CmltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IGZsYXRNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCB7IE1ldHJpY3NTZXJ2aWNlIH0gZnJvbSAnLi9tZXRyaWNzLnNlcnZpY2UnOwpsZXQgTWV0cmljc0NvbXBvbmVudCA9IGNsYXNzIE1ldHJpY3NDb21wb25lbnQgewogICAgY29uc3RydWN0b3IobWV0cmljc1NlcnZpY2UsIGNoYW5nZURldGVjdG9yKSB7CiAgICAgICAgdGhpcy5tZXRyaWNzU2VydmljZSA9IG1ldHJpY3NTZXJ2aWNlOwogICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IgPSBjaGFuZ2VEZXRlY3RvcjsKICAgICAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IHRydWU7CiAgICB9CiAgICBuZ09uSW5pdCgpIHsKICAgICAgICB0aGlzLnJlZnJlc2goKTsKICAgIH0KICAgIHJlZnJlc2goKSB7CiAgICAgICAgdGhpcy51cGRhdGluZ01ldHJpY3MgPSB0cnVlOwogICAgICAgIHRoaXMubWV0cmljc1NlcnZpY2UKICAgICAgICAgICAgLmdldE1ldHJpY3MoKQogICAgICAgICAgICAucGlwZShmbGF0TWFwKCgpID0+IHRoaXMubWV0cmljc1NlcnZpY2UudGhyZWFkRHVtcCgpLCAobWV0cmljcywgdGhyZWFkRHVtcCkgPT4gewogICAgICAgICAgICB0aGlzLm1ldHJpY3MgPSBtZXRyaWNzOwogICAgICAgICAgICB0aGlzLnRocmVhZHMgPSB0aHJlYWREdW1wLnRocmVhZHM7CiAgICAgICAgICAgIHRoaXMudXBkYXRpbmdNZXRyaWNzID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpOwogICAgICAgIH0pKQogICAgICAgICAgICAuc3Vic2NyaWJlKCk7CiAgICB9CiAgICBtZXRyaWNzS2V5RXhpc3RzKGtleSkgewogICAgICAgIHJldHVybiB0aGlzLm1ldHJpY3MgJiYgdGhpcy5tZXRyaWNzW2tleV07CiAgICB9CiAgICBtZXRyaWNzS2V5RXhpc3RzQW5kT2JqZWN0Tm90RW1wdHkoa2V5KSB7CiAgICAgICAgcmV0dXJuIHRoaXMubWV0cmljcyAmJiB0aGlzLm1ldHJpY3Nba2V5XSAmJiBKU09OLnN0cmluZ2lmeSh0aGlzLm1ldHJpY3Nba2V5XSkgIT09ICd7fSc7CiAgICB9Cn07Ck1ldHJpY3NDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgQ29tcG9uZW50KHsKICAgICAgICBzZWxlY3RvcjogJ2poaS1tZXRyaWNzJywKICAgICAgICB0ZW1wbGF0ZVVybDogJy4vbWV0cmljcy5jb21wb25lbnQuaHRtbCcsCiAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gKICAgIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIE1ldHJpY3NTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBNZXRyaWNzU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBDaGFuZ2VEZXRlY3RvclJlZiAhPT0gInVuZGVmaW5lZCIgJiYgQ2hhbmdlRGV0ZWN0b3JSZWYpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3RdKQpdLCBNZXRyaWNzQ29tcG9uZW50KTsKZXhwb3J0IHsgTWV0cmljc0NvbXBvbmVudCB9Owo="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/metrics/metrics.component.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/metrics/metrics.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,uBAAuB,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAC9F,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,cAAc,EAA2C,MAAM,mBAAmB,CAAC;AAO5F,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAK3B,YAAoB,cAA8B,EAAU,cAAiC;QAAzE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAF7F,oBAAe,GAAG,IAAI,CAAC;IAEyE,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc;aAChB,UAAU,EAAE;aACZ,IAAI,CACH,OAAO,CACL,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,EACtC,CAAC,OAAgB,EAAE,UAAsB,EAAE,EAAE;YAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACtC,CAAC,CACF,CACF;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,gBAAgB,CAAC,GAAe;QAC9B,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,iCAAiC,CAAC,GAAe;QAC/C,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACzF,CAAC;CACF,CAAA;AApCY,gBAAgB;IAL5B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,0BAA0B;QACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;iEAMoC,cAAc,oBAAd,cAAc,oDAA0B,iBAAiB,oBAAjB,iBAAiB;GALlF,gBAAgB,CAoC5B;SApCY,gBAAgB","sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { flatMap } from 'rxjs/operators';\n\nimport { MetricsService, Metrics, MetricsKey, ThreadDump, Thread } from './metrics.service';\n\n@Component({\n  selector: 'jhi-metrics',\n  templateUrl: './metrics.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MetricsComponent implements OnInit {\n  metrics?: Metrics;\n  threads?: Thread[];\n  updatingMetrics = true;\n\n  constructor(private metricsService: MetricsService, private changeDetector: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh(): void {\n    this.updatingMetrics = true;\n    this.metricsService\n      .getMetrics()\n      .pipe(\n        flatMap(\n          () => this.metricsService.threadDump(),\n          (metrics: Metrics, threadDump: ThreadDump) => {\n            this.metrics = metrics;\n            this.threads = threadDump.threads;\n            this.updatingMetrics = false;\n            this.changeDetector.detectChanges();\n          }\n        )\n      )\n      .subscribe();\n  }\n\n  metricsKeyExists(key: MetricsKey): boolean {\n    return this.metrics && this.metrics[key];\n  }\n\n  metricsKeyExistsAndObjectNotEmpty(key: MetricsKey): boolean {\n    return this.metrics && this.metrics[key] && JSON.stringify(this.metrics[key]) !== '{}';\n  }\n}\n"]}]}