{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/language/find-language-from-key.pipe.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/language/find-language-from-key.pipe.ts","mtime":1720520698749},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IFBpcGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKbGV0IEZpbmRMYW5ndWFnZUZyb21LZXlQaXBlID0gY2xhc3MgRmluZExhbmd1YWdlRnJvbUtleVBpcGUgewogICAgY29uc3RydWN0b3IoKSB7CiAgICAgICAgdGhpcy5sYW5ndWFnZXMgPSB7CiAgICAgICAgICAgIGVuOiB7IG5hbWU6ICdFbmdsaXNoJyB9CiAgICAgICAgICAgIC8vIGpoaXBzdGVyLW5lZWRsZS1pMThuLWxhbmd1YWdlLWtleS1waXBlIC0gSkhpcHN0ZXIgd2lsbCBhZGQvcmVtb3ZlIGxhbmd1YWdlcyBpbiB0aGlzIG9iamVjdAogICAgICAgIH07CiAgICB9CiAgICB0cmFuc2Zvcm0obGFuZykgewogICAgICAgIHJldHVybiB0aGlzLmxhbmd1YWdlc1tsYW5nXS5uYW1lOwogICAgfQp9OwpGaW5kTGFuZ3VhZ2VGcm9tS2V5UGlwZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBQaXBlKHsgbmFtZTogJ2ZpbmRMYW5ndWFnZUZyb21LZXknIH0pCl0sIEZpbmRMYW5ndWFnZUZyb21LZXlQaXBlKTsKZXhwb3J0IHsgRmluZExhbmd1YWdlRnJvbUtleVBpcGUgfTsK"},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/language/find-language-from-key.pipe.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/shared/language/find-language-from-key.pipe.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AAGpD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IADpC;QAEU,cAAS,GAAuD;YACtE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YACvB,6FAA6F;SAC9F,CAAC;IAIJ,CAAC;IAHC,SAAS,CAAC,IAAY;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;IACnC,CAAC;CACF,CAAA;AARY,uBAAuB;IADnC,IAAI,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC;GACzB,uBAAuB,CAQnC;SARY,uBAAuB","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'findLanguageFromKey' })\nexport class FindLanguageFromKeyPipe implements PipeTransform {\n  private languages: { [key: string]: { name: string; rtl?: boolean } } = {\n    en: { name: 'English' }\n    // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\n  };\n  transform(lang: string): string {\n    return this.languages[lang].name;\n  }\n}\n"]}]}