{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/auth-jwt.service.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/auth-jwt.service.ts","mtime":1720520698838},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7CmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJzsKaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBMb2NhbFN0b3JhZ2VTZXJ2aWNlLCBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgfSBmcm9tICduZ3gtd2Vic3RvcmFnZSc7CmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOwpsZXQgQXV0aFNlcnZlclByb3ZpZGVyID0gY2xhc3MgQXV0aFNlcnZlclByb3ZpZGVyIHsKICAgIGNvbnN0cnVjdG9yKGh0dHAsICRsb2NhbFN0b3JhZ2UsICRzZXNzaW9uU3RvcmFnZSkgewogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICAgICAgdGhpcy4kbG9jYWxTdG9yYWdlID0gJGxvY2FsU3RvcmFnZTsKICAgICAgICB0aGlzLiRzZXNzaW9uU3RvcmFnZSA9ICRzZXNzaW9uU3RvcmFnZTsKICAgIH0KICAgIGdldFRva2VuKCkgewogICAgICAgIHJldHVybiB0aGlzLiRsb2NhbFN0b3JhZ2UucmV0cmlldmUoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nKSB8fCB0aGlzLiRzZXNzaW9uU3RvcmFnZS5yZXRyaWV2ZSgnYXV0aGVudGljYXRpb25Ub2tlbicpIHx8ICcnOwogICAgfQogICAgbG9naW4oY3JlZGVudGlhbHMpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwCiAgICAgICAgICAgIC5wb3N0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9hdXRoZW50aWNhdGUnLCBjcmVkZW50aWFscykKICAgICAgICAgICAgLnBpcGUobWFwKHJlc3BvbnNlID0+IHRoaXMuYXV0aGVudGljYXRlU3VjY2VzcyhyZXNwb25zZSwgY3JlZGVudGlhbHMucmVtZW1iZXJNZSkpKTsKICAgIH0KICAgIGxvZ291dCgpIHsKICAgICAgICByZXR1cm4gbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4gewogICAgICAgICAgICB0aGlzLiRsb2NhbFN0b3JhZ2UuY2xlYXIoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nKTsKICAgICAgICAgICAgdGhpcy4kc2Vzc2lvblN0b3JhZ2UuY2xlYXIoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nKTsKICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTsKICAgICAgICB9KTsKICAgIH0KICAgIGF1dGhlbnRpY2F0ZVN1Y2Nlc3MocmVzcG9uc2UsIHJlbWVtYmVyTWUpIHsKICAgICAgICBjb25zdCBqd3QgPSByZXNwb25zZS5pZF90b2tlbjsKICAgICAgICBpZiAocmVtZW1iZXJNZSkgewogICAgICAgICAgICB0aGlzLiRsb2NhbFN0b3JhZ2Uuc3RvcmUoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nLCBqd3QpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kc2Vzc2lvblN0b3JhZ2Uuc3RvcmUoJ2F1dGhlbnRpY2F0aW9uVG9rZW4nLCBqd3QpOwogICAgICAgIH0KICAgIH0KfTsKQXV0aFNlcnZlclByb3ZpZGVyID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBMb2NhbFN0b3JhZ2VTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBMb2NhbFN0b3JhZ2VTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9iIDogT2JqZWN0LCB0eXBlb2YgKF9jID0gdHlwZW9mIFNlc3Npb25TdG9yYWdlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9jIDogT2JqZWN0XSkKXSwgQXV0aFNlcnZlclByb3ZpZGVyKTsKZXhwb3J0IHsgQXV0aFNlcnZlclByb3ZpZGVyIH07Cg=="},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/auth-jwt.service.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/core/auth/auth-jwt.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AAE5E,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAQnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC7B,YAAoB,IAAgB,EAAU,aAAkC,EAAU,eAAsC;QAA5G,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAqB;QAAU,oBAAe,GAAf,eAAe,CAAuB;IAAG,CAAC;IAEpI,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IAC1H,CAAC;IAED,KAAK,CAAC,WAAkB;QACtB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAW,cAAc,GAAG,kBAAkB,EAAE,WAAW,CAAC;aAChE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAChD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAClD,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB,CAAC,QAAkB,EAAE,UAAmB;QACjE,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;SACxD;IACH,CAAC;CACF,CAAA;AA7BY,kBAAkB;IAD9B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEP,UAAU,oBAAV,UAAU,oDAAyB,mBAAmB,oBAAnB,mBAAmB,oDAA2B,qBAAqB,oBAArB,qBAAqB;GADrH,kBAAkB,CA6B9B;SA7BY,kBAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Login } from 'app/core/login/login.model';\n\ntype JwtToken = {\n  id_token: string;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AuthServerProvider {\n  constructor(private http: HttpClient, private $localStorage: LocalStorageService, private $sessionStorage: SessionStorageService) {}\n\n  getToken(): string {\n    return this.$localStorage.retrieve('authenticationToken') || this.$sessionStorage.retrieve('authenticationToken') || '';\n  }\n\n  login(credentials: Login): Observable<void> {\n    return this.http\n      .post<JwtToken>(SERVER_API_URL + 'api/authenticate', credentials)\n      .pipe(map(response => this.authenticateSuccess(response, credentials.rememberMe)));\n  }\n\n  logout(): Observable<void> {\n    return new Observable(observer => {\n      this.$localStorage.clear('authenticationToken');\n      this.$sessionStorage.clear('authenticationToken');\n      observer.complete();\n    });\n  }\n\n  private authenticateSuccess(response: JwtToken, rememberMe: boolean): void {\n    const jwt = response.id_token;\n    if (rememberMe) {\n      this.$localStorage.store('authenticationToken', jwt);\n    } else {\n      this.$sessionStorage.store('authenticationToken', jwt);\n    }\n  }\n}\n"]}]}