{"remainingRequest":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js??ref--9-3!/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/configuration/configuration.service.ts","dependencies":[{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/configuration/configuration.service.ts","mtime":1720520698057},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOwpsZXQgQ29uZmlndXJhdGlvblNlcnZpY2UgPSBjbGFzcyBDb25maWd1cmF0aW9uU2VydmljZSB7CiAgICBjb25zdHJ1Y3RvcihodHRwKSB7CiAgICAgICAgdGhpcy5odHRwID0gaHR0cDsKICAgIH0KICAgIGdldEJlYW5zKCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvY29uZmlncHJvcHMnKS5waXBlKG1hcChjb25maWdQcm9wcyA9PiBPYmplY3QudmFsdWVzKE9iamVjdC52YWx1ZXMoY29uZmlnUHJvcHMuY29udGV4dHMpCiAgICAgICAgICAgIC5tYXAoY29udGV4dCA9PiBjb250ZXh0LmJlYW5zKQogICAgICAgICAgICAucmVkdWNlKChhbGxCZWFucywgY29udGV4dEJlYW5zKSA9PiAoT2JqZWN0LmFzc2lnbih7fSwgYWxsQmVhbnMsIGNvbnRleHRCZWFucykpKSkpKTsKICAgIH0KICAgIGdldFByb3BlcnR5U291cmNlcygpIHsKICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldChTRVJWRVJfQVBJX1VSTCArICdtYW5hZ2VtZW50L2VudicpLnBpcGUobWFwKGVudiA9PiBlbnYucHJvcGVydHlTb3VyY2VzKSk7CiAgICB9Cn07CkNvbmZpZ3VyYXRpb25TZXJ2aWNlID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSHR0cENsaWVudCAhPT0gInVuZGVmaW5lZCIgJiYgSHR0cENsaWVudCkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdF0pCl0sIENvbmZpZ3VyYXRpb25TZXJ2aWNlKTsKZXhwb3J0IHsgQ29uZmlndXJhdGlvblNlcnZpY2UgfTsK"},{"version":3,"file":"/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/configuration/configuration.service.ts","sourceRoot":"","sources":["/Users/technoidentity/Desktop/dsp-jhipter-app/node_modules/eslint-loader/dist/cjs.js!/Users/technoidentity/Desktop/dsp-jhipter-app/src/main/webapp/app/admin/configuration/configuration.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAElD,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AA4CnD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,cAAc,GAAG,wBAAwB,CAAC,CAAC,IAAI,CAC/E,GAAG,CAAC,WAAW,CAAC,EAAE,CAChB,MAAM,CAAC,MAAM,CACX,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;aAChC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;aAC7B,MAAM,CAAC,CAAC,QAAe,EAAE,YAAmB,EAAE,EAAE,CAAC,mBAAM,QAAQ,EAAK,YAAY,EAAG,CAAC,CACxF,CACF,CACF,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,cAAc,GAAG,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;IACrG,CAAC;CACF,CAAA;AAlBY,oBAAoB;IADhC,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEP,UAAU,oBAAV,UAAU;GADzB,oBAAoB,CAkBhC;SAlBY,oBAAoB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\nexport interface ConfigProps {\n  contexts: Contexts;\n}\n\nexport interface Contexts {\n  [key: string]: Context;\n}\n\nexport interface Context {\n  beans: Beans;\n  parentId?: any;\n}\n\nexport interface Beans {\n  [key: string]: Bean;\n}\n\nexport interface Bean {\n  prefix: string;\n  properties: any;\n}\n\nexport interface Env {\n  activeProfiles?: string[];\n  propertySources: PropertySource[];\n}\n\nexport interface PropertySource {\n  name: string;\n  properties: Properties;\n}\n\nexport interface Properties {\n  [key: string]: Property;\n}\n\nexport interface Property {\n  value: string;\n  origin?: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurationService {\n  constructor(private http: HttpClient) {}\n\n  getBeans(): Observable<Bean[]> {\n    return this.http.get<ConfigProps>(SERVER_API_URL + 'management/configprops').pipe(\n      map(configProps =>\n        Object.values(\n          Object.values(configProps.contexts)\n            .map(context => context.beans)\n            .reduce((allBeans: Beans, contextBeans: Beans) => ({ ...allBeans, ...contextBeans }))\n        )\n      )\n    );\n  }\n\n  getPropertySources(): Observable<PropertySource[]> {\n    return this.http.get<Env>(SERVER_API_URL + 'management/env').pipe(map(env => env.propertySources));\n  }\n}\n"]}]}