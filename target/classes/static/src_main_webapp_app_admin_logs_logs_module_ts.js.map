{"version":3,"file":"src_main_webapp_app_admin_logs_logs_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/admin/logs/log.model.ts","./src/main/webapp/app/admin/logs/logs.component.ts","./src/main/webapp/app/admin/logs/logs.component.html","./src/main/webapp/app/admin/logs/logs.module.ts","./src/main/webapp/app/admin/logs/logs.route.ts","./src/main/webapp/app/admin/logs/logs.service.ts"],"sourcesContent":["export type Level = 'TRACE' | 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'OFF';\n\nexport interface Logger {\n  configuredLevel: Level | null;\n  effectiveLevel: Level;\n}\n\nexport interface LoggersResponse {\n  levels: Level[];\n  loggers: { [key: string]: Logger };\n}\n\nexport class Log {\n  constructor(public name: string, public level: Level) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Log, LoggersResponse, Level } from './log.model';\nimport { LogsService } from './logs.service';\n\n@Component({\n  selector: 'jhi-logs',\n  templateUrl: './logs.component.html',\n})\nexport class LogsComponent implements OnInit {\n  loggers?: Log[];\n  filteredAndOrderedLoggers?: Log[];\n  filter = '';\n  orderProp: keyof Log = 'name';\n  ascending = true;\n\n  constructor(private logsService: LogsService) {}\n\n  ngOnInit(): void {\n    this.findAndExtractLoggers();\n  }\n\n  changeLevel(name: string, level: Level): void {\n    this.logsService.changeLevel(name, level).subscribe(() => this.findAndExtractLoggers());\n  }\n\n  filterAndSort(): void {\n    this.filteredAndOrderedLoggers = this.loggers!.filter(\n      logger => !this.filter || logger.name.toLowerCase().includes(this.filter.toLowerCase())\n    ).sort((a, b) => {\n      if (a[this.orderProp] < b[this.orderProp]) {\n        return this.ascending ? -1 : 1;\n      } else if (a[this.orderProp] > b[this.orderProp]) {\n        return this.ascending ? 1 : -1;\n      } else if (this.orderProp === 'level') {\n        return a.name < b.name ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  private findAndExtractLoggers(): void {\n    this.logsService.findAll().subscribe((response: LoggersResponse) => {\n      this.loggers = Object.entries(response.loggers).map(([key, logger]) => new Log(key, logger.effectiveLevel));\n      this.filterAndSort();\n    });\n  }\n}\n","<div class=\"table-responsive\" *ngIf=\"loggers\">\n  <h2 id=\"logs-page-heading\" jhiTranslate=\"logs.title\" data-cy=\"logsPageHeading\">Logs</h2>\n\n  <p jhiTranslate=\"logs.nbloggers\" [translateValues]=\"{ total: loggers.length }\">There are {{ loggers.length }} loggers.</p>\n\n  <span jhiTranslate=\"logs.filter\">Filter</span>\n  <input type=\"text\" [(ngModel)]=\"filter\" (ngModelChange)=\"filterAndSort()\" class=\"form-control\" />\n\n  <table class=\"table table-sm table-striped table-bordered\" aria-describedby=\"logs-page-heading\">\n    <thead>\n      <tr jhiSort [(predicate)]=\"orderProp\" [(ascending)]=\"ascending\" (sortChange)=\"filterAndSort()\">\n        <th jhiSortBy=\"name\" scope=\"col\"><span jhiTranslate=\"logs.table.name\">Name</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th jhiSortBy=\"level\" scope=\"col\"><span jhiTranslate=\"logs.table.level\">Level</span> <fa-icon icon=\"sort\"></fa-icon></th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr *ngFor=\"let logger of filteredAndOrderedLoggers\">\n        <td>\n          <small>{{ logger.name | slice: 0:140 }}</small>\n        </td>\n        <td>\n          <button\n            (click)=\"changeLevel(logger.name, 'TRACE')\"\n            [ngClass]=\"logger.level === 'TRACE' ? 'btn-primary' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            TRACE\n          </button>\n\n          <button\n            (click)=\"changeLevel(logger.name, 'DEBUG')\"\n            [ngClass]=\"logger.level === 'DEBUG' ? 'btn-success' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            DEBUG\n          </button>\n\n          <button\n            (click)=\"changeLevel(logger.name, 'INFO')\"\n            [ngClass]=\"logger.level === 'INFO' ? 'btn-info' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            INFO\n          </button>\n\n          <button\n            (click)=\"changeLevel(logger.name, 'WARN')\"\n            [ngClass]=\"logger.level === 'WARN' ? 'btn-warning' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            WARN\n          </button>\n\n          <button\n            (click)=\"changeLevel(logger.name, 'ERROR')\"\n            [ngClass]=\"logger.level === 'ERROR' ? 'btn-danger' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            ERROR\n          </button>\n\n          <button\n            (click)=\"changeLevel(logger.name, 'OFF')\"\n            [ngClass]=\"logger.level === 'OFF' ? 'btn-secondary' : 'btn-light'\"\n            class=\"btn btn-sm\"\n          >\n            OFF\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\n\nimport { LogsComponent } from './logs.component';\nimport { logsRoute } from './logs.route';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild([logsRoute])],\n  declarations: [LogsComponent],\n})\nexport class LogsModule {}\n","import { Route } from '@angular/router';\n\nimport { LogsComponent } from './logs.component';\n\nexport const logsRoute: Route = {\n  path: '',\n  component: LogsComponent,\n  data: {\n    pageTitle: 'logs.title',\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { LoggersResponse, Level } from './log.model';\n\n@Injectable({ providedIn: 'root' })\nexport class LogsService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  changeLevel(name: string, configuredLevel: Level): Observable<{}> {\n    return this.http.post(this.applicationConfigService.getEndpointFor(`management/loggers/${name}`), { configuredLevel });\n  }\n\n  findAll(): Observable<LoggersResponse> {\n    return this.http.get<LoggersResponse>(this.applicationConfigService.getEndpointFor('management/loggers'));\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}