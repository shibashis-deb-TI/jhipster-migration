{"version":3,"file":"src_main_webapp_app_admin_health_health_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/admin/health/health.component.ts","./src/main/webapp/app/admin/health/health.component.html","./src/main/webapp/app/admin/health/health.module.ts","./src/main/webapp/app/admin/health/health.route.ts","./src/main/webapp/app/admin/health/health.service.ts","./src/main/webapp/app/admin/health/modal/health-modal.component.ts","./src/main/webapp/app/admin/health/modal/health-modal.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthService } from './health.service';\nimport { Health, HealthDetails, HealthStatus } from './health.model';\nimport { HealthModalComponent } from './modal/health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html',\n})\nexport class HealthComponent implements OnInit {\n  health?: Health;\n\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  getBadgeClass(statusState: HealthStatus): string {\n    if (statusState === 'UP') {\n      return 'bg-success';\n    }\n    return 'bg-danger';\n  }\n\n  refresh(): void {\n    this.healthService.checkHealth().subscribe({\n      next: health => (this.health = health),\n      error: (error: HttpErrorResponse) => {\n        if (error.status === 503) {\n          this.health = error.error;\n        }\n      },\n    });\n  }\n\n  showHealth(health: { key: string; value: HealthDetails }): void {\n    const modalRef = this.modalService.open(HealthModalComponent);\n    modalRef.componentInstance.health = health;\n  }\n}\n","<div>\n  <h2>\n    <span id=\"health-page-heading\" jhiTranslate=\"health.title\" data-cy=\"healthPageHeading\">Health Checks</span>\n\n    <button class=\"btn btn-primary float-end\" (click)=\"refresh()\">\n      <fa-icon icon=\"sync\"></fa-icon> <span jhiTranslate=\"health.refresh.button\">Refresh</span>\n    </button>\n  </h2>\n\n  <div class=\"table-responsive\">\n    <table id=\"healthCheck\" class=\"table table-striped\" aria-describedby=\"health-page-heading\">\n      <thead>\n        <tr>\n          <th scope=\"col\" jhiTranslate=\"health.table.service\">Service Name</th>\n          <th scope=\"col\" class=\"text-center\" jhiTranslate=\"health.table.status\">Status</th>\n          <th scope=\"col\" class=\"text-center\" jhiTranslate=\"health.details.details\">Details</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"health\">\n        <tr *ngFor=\"let componentHealth of health.components | keyvalue\">\n          <td>\n            {{ 'health.indicator.' + componentHealth.key | translate }}\n          </td>\n          <td class=\"text-center\">\n            <span\n              class=\"badge\"\n              [ngClass]=\"getBadgeClass(componentHealth.value!.status)\"\n              jhiTranslate=\"{{ 'health.status.' + componentHealth.value!.status }}\"\n            >\n              {{ componentHealth.value!.status }}\n            </span>\n          </td>\n          <td class=\"text-center\">\n            <a\n              class=\"hand\"\n              (click)=\"showHealth({ key: componentHealth.key, value: componentHealth.value! })\"\n              *ngIf=\"componentHealth.value!.details\"\n            >\n              <fa-icon icon=\"eye\"></fa-icon>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'app/shared/shared.module';\n\nimport { HealthComponent } from './health.component';\nimport { HealthModalComponent } from './modal/health-modal.component';\nimport { healthRoute } from './health.route';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild([healthRoute])],\n  declarations: [HealthComponent, HealthModalComponent],\n  entryComponents: [HealthModalComponent],\n})\nexport class HealthModule {}\n","import { Route } from '@angular/router';\n\nimport { HealthComponent } from './health.component';\n\nexport const healthRoute: Route = {\n  path: '',\n  component: HealthComponent,\n  data: {\n    pageTitle: 'health.title',\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { Health } from './health.model';\n\n@Injectable({ providedIn: 'root' })\nexport class HealthService {\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  checkHealth(): Observable<Health> {\n    return this.http.get<Health>(this.applicationConfigService.getEndpointFor('management/health'));\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { HealthKey, HealthDetails } from '../health.model';\n\n@Component({\n  selector: 'jhi-health-modal',\n  templateUrl: './health-modal.component.html',\n})\nexport class HealthModalComponent {\n  health?: { key: HealthKey; value: HealthDetails };\n\n  constructor(private activeModal: NgbActiveModal) {}\n\n  readableValue(value: any): string {\n    if (this.health?.key === 'diskSpace') {\n      // Should display storage space in an human readable unit\n      const val = value / 1073741824;\n      if (val > 1) {\n        return `${val.toFixed(2)} GB`;\n      }\n      return `${(value / 1048576).toFixed(2)} MB`;\n    }\n\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  dismiss(): void {\n    this.activeModal.dismiss();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\" id=\"showHealthLabel\" *ngIf=\"health\">\n    {{ 'health.indicator.' + health.key | translate }}\n  </h4>\n\n  <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"btn-close\" type=\"button\" (click)=\"dismiss()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<div class=\"modal-body pad\">\n  <div *ngIf=\"health\">\n    <h5 jhiTranslate=\"health.details.properties\">Properties</h5>\n\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped\" aria-describedby=\"showHealthLabel\">\n        <thead>\n          <tr>\n            <th scope=\"col\" class=\"text-start\" jhiTranslate=\"health.details.name\">Name</th>\n            <th scope=\"col\" class=\"text-start\" jhiTranslate=\"health.details.value\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let healthDetail of health.value.details! | keyvalue\">\n            <td class=\"text-start\">{{ healthDetail.key }}</td>\n            <td class=\"text-start\">{{ readableValue(healthDetail.value) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-footer\">\n  <button data-dismiss=\"modal\" class=\"btn btn-secondary float-start\" type=\"button\" (click)=\"dismiss()\">Done</button>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}